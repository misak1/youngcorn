{
  "author": {
    "name": "Stefan Goessner"
  },
  "name": "JSONPath",
  "description": "A JS implementation of JSONPath",
  "contributors": [
    {
      "name": "Prof. GÃ¶ssner",
      "email": "stefan.goessner@fh-dortmund.de"
    },
    {
      "name": "Subbu Allamaraju",
      "email": "subbu@subbu.org"
    },
    {
      "name": "Mike Brevoort",
      "email": "mike@brevoort.com"
    },
    {
      "name": "Robert Krahn",
      "email": "robert.krahn@gmail.com"
    }
  ],
  "license": "MIT",
  "version": "0.11.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/s3u/JSONPath.git"
  },
  "main": "./lib/jsonpath",
  "dependencies": {},
  "devDependencies": {
    "nodeunit": "0.9.0"
  },
  "scripts": {
    "test": "nodeunit test"
  },
  "readme": "# JSONPath [![build status](https://secure.travis-ci.org/s3u/JSONPath.png)](http://travis-ci.org/s3u/JSONPath)\n\nAnalyse, transform, and selectively extract data from JSON documents (and JavaScript objects).\n\n# Install\n    \n    npm install JSONPath\n\n# Usage\n\nIn node.js:\n\n```js\nvar JSONPath = require('JSONPath');\nJSONPath({json: obj, path: path});\n```\n\nFor browser usage you can directly include `lib/jsonpath.js`, no browserify\nmagic necessary:\n\n```html\n<script src=\"lib/jsonpath.js\"></script>\n<script>\n    JSONPath({json: obj, path: path});\n</script>\n```\n\nAn alternative syntax is available as:\n\n```js\nJSONPath(options, obj, path);\n```\n\nThe following format is now deprecated:\n\n```js\njsonPath.eval(options, obj, path);\n```\n\nOther properties that can be supplied for\noptions (the first argument) include:\n\n- ***autostart*** (**default: true**) - If this is supplied as `false`, one may call the `evaluate` method manually as needed.\n- ***flatten*** (**default: false**) - Whether the returned array of results will be flattened to a single dimension array.\n- ***resultType*** (**default: \"value\"**) - Can be case-insensitive form of \"value\" or \"path\" to determine whether to return results as the values of the found items or as their absolute paths.\n- ***sandbox*** (**default: An empty object **) - Key-value map of variables to be available to code evaluations such as filtering expressions. (Note that the current path and value will also be available; see the Syntax section for details.)\n- ***wrap*** (**default: true**) - Whether or not to wrap the results in an array. If `wrap` is set to false, and no results are found, `false` will be returned (as opposed to an empty array). If `wrap` is set to false and a single result is found, that result will be the only item returned. An array will still be returned if multiple results are found, however.\n\nSyntax with examples\n--------\n\nGiven the following JSON, taken from http://goessner.net/articles/JsonPath/ :\n\n```json\n{\n  \"store\": {\n    \"book\": [\n      {\n        \"category\": \"reference\",\n        \"author\": \"Nigel Rees\",\n        \"title\": \"Sayings of the Century\",\n        \"price\": 8.95\n      },\n      {\n        \"category\": \"fiction\",\n        \"author\": \"Evelyn Waugh\",\n        \"title\": \"Sword of Honour\",\n        \"price\": 12.99\n      },\n      {\n        \"category\": \"fiction\",\n        \"author\": \"Herman Melville\",\n        \"title\": \"Moby Dick\",\n        \"isbn\": \"0-553-21311-3\",\n        \"price\": 8.99\n      },\n      {\n        \"category\": \"fiction\",\n        \"author\": \"J. R. R. Tolkien\",\n        \"title\": \"The Lord of the Rings\",\n        \"isbn\": \"0-395-19395-8\",\n        \"price\": 22.99\n      }\n    ],\n    \"bicycle\": {\n      \"color\": \"red\",\n      \"price\": 19.95\n    }\n  }\n}\n```\n\n\nXPath               | JSONPath               | Result                                | Notes\n------------------- | ---------------------- | ------------------------------------- | -----\n/store/book/author  | $.store.book[*].author | the authors of all books in the store |\n//author            | $..author              | all authors                           |\n/store/*            | $.store.*              | all things in store, which are some books and a red bicycle.|\n/store//price       | $.store..price         | the price of everything in the store. |\n//book[3]           | $..book[2]             | the third book                        |\n//book[last()]      | $..book[(@.length-1)]<br>$..book[-1:]  | the last book in order.|\n//book[position()<3]| $..book[0,1]<br>$..book[:2]| the first two books               |\n//book/*[self::category\\|self::author] or //book/(category,author) in XPath 2.0| $..book[category,author]| the categories and authors of all books |\n//book[isbn]        | $..book[?(@.isbn)]     | filter all books with isbn number     |\n//book[price<10]    | $..book[?(@.price<10)] | filter all books cheapier than 10     |\n//*[price>19]/..    | $..[?(@.price>19)]^    | categories with things more expensive than 19 | Parent (caret) not present in original spec\n//*                 | $..*                   | all Elements in XML document. All members of JSON structure. |\n/store/book/[position()!=1] | $.store.book[?(@path !== \"$[\\'store\\'][\\'book\\'][0]\")] | All books besides that at the path pointing to the first | @path not present in original spec\n\nAny additional variables supplied as properties on the optional\n\"sandbox\" object option are also available to (parenthetical-based)\nevaluations.\n\n# Development\n\nRunning the tests on node: `npm test`. For in-browser tests:\n\n* Ensure that nodeunit is browser-compiled: `cd node_modules/nodeunit; make browser;`\n* Serve the js/html files:\n\n```sh\n    node -e \"require('http').createServer(function(req,res) { \\\n        var s = require('fs').createReadStream('.' + req.url); \\\n        s.pipe(res); s.on('error', function() {}); }).listen(8082);\"\n```\n* To run the tests visit [http://localhost:8082/test/test.html]().\n\n\n# License\n\n[MIT License](http://www.opensource.org/licenses/mit-license.php).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/s3u/JSONPath/issues"
  },
  "homepage": "https://github.com/s3u/JSONPath",
  "_id": "JSONPath@0.11.0",
  "_shasum": "85123805ecec1d72b4e1f0b87f4ef0ca5ff5603f",
  "_resolved": "git://github.com/s3u/JSONPath.git#d01c16201cdbbb600ffd914192b0a307ad00c66c",
  "_from": "JSONPath@git://github.com/s3u/JSONPath.git"
}
